import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const TransactionsTable = ({ transactions, onEditTrade, onDeleteTransaction }) => {
    if (!transactions || transactions.length === 0) {
        return _jsx("p", { className: "text-on-surface/70", children: "No transactions to display." });
    }
    const isValidTransactionId = id => (typeof id === 'number' || (typeof id === 'string' && id.length > 0));
    return (_jsxs("div", { className: "overflow-x-auto mt-8", children: [_jsx("h3", { className: "text-lg font-semibold mb-2 text-on-surface", children: "All Transactions" }), _jsxs("table", { className: "min-w-full border-collapse text-on-surface text-sm bg-surface", children: [_jsx("thead", { children: _jsxs("tr", { children: [_jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Transaction ID" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Trade ID" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Ticker" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Exchange" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Action" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Quantity" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Price" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Date/Time" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Actions" }), _jsx("th", { className: "px-3 py-2 border-b-2 border-card-stroke bg-surface-variant whitespace-nowrap", children: "Notes" })] }) }), _jsx("tbody", { children: transactions.map((txn, idx) => (_jsxs("tr", { children: [_jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.transaction_id ?? '-' }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.trade_id }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.ticker }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.exchange }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.action }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.quantity }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.price }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.datetime ? new Date(txn.datetime).toLocaleString() : '-' }), _jsxs("td", { className: "px-3 py-2 border-b border-card-stroke", children: [_jsx("button", { className: "text-primary hover:underline mr-2", onClick: () => onEditTrade(txn.trade_id), title: "Edit Trade", children: "Edit" }), _jsx("button", { className: "text-error hover:underline", onClick: () => {
                                                if (isValidTransactionId(txn.transaction_id)) {
                                                    if (window.confirm('Are you sure you want to delete this transaction?')) {
                                                        onDeleteTransaction(txn.transaction_id);
                                                    }
                                                }
                                            }, title: "Delete Transaction", disabled: !isValidTransactionId(txn.transaction_id), children: "Delete" })] }), _jsx("td", { className: "px-3 py-2 border-b border-card-stroke", children: txn.notes ?? '-' })] }, txn.transaction_id || idx))) })] })] }));
};
export default TransactionsTable;
