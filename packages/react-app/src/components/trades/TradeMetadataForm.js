import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import AutocompleteTextarea from '../common/AutocompleteTextarea';
// Helper function to adapt textarea events to the generic handler
const adaptTextareaEvent = (onFormChange) => (e) => {
    onFormChange(e);
};
const TradeMetadataForm = ({ formData, availableEmotions, onFormChange, onEmotionChange }) => {
    const handleTextareaChange = adaptTextareaEvent(onFormChange);
    return (_jsxs("form", { className: "flex flex-col gap-4 p-4 bg-surface rounded-2xl text-on-surface w-full", children: [_jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Strategy" }), _jsx("select", { name: "strategy_id", value: formData.strategy_id !== undefined && formData.strategy_id !== null ? String(formData.strategy_id) : '', onChange: onFormChange, className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full focus:outline-none focus:ring-2 focus:ring-primary", children: _jsx("option", { value: "", children: "Select Strategy" }) })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Market Conditions" }), _jsx(AutocompleteTextarea, { id: "market_conditions", name: "market_conditions", value: formData.market_conditions || '', onChange: handleTextareaChange, field: "market_conditions", className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full min-h-[100px] focus:outline-none focus:ring-2 focus:ring-primary", placeholder: "Describe the market conditions during this trade...", rows: 4 })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Setup Description" }), _jsx(AutocompleteTextarea, { id: "setup_description", name: "setup_description", value: formData.setup_description || '', onChange: handleTextareaChange, field: "setup_description", className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full min-h-[100px] focus:outline-none focus:ring-2 focus:ring-primary", placeholder: "Describe the trade setup...", rows: 4 })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Trade Thesis Summary" }), _jsx("textarea", { name: "reasoning", value: formData.reasoning || '', onChange: onFormChange, className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full min-h-[100px] focus:outline-none focus:ring-2 focus:ring-primary", placeholder: "Summarize your trade thesis for this trade..." })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Lessons Learned" }), _jsx("textarea", { name: "lessons_learned", value: formData.lessons_learned || '', onChange: onFormChange, className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full min-h-[100px] focus:outline-none focus:ring-2 focus:ring-primary", placeholder: "What did you learn from this trade?" })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Initial Risk (R-Multiple)" }), _jsx("input", { type: "number", name: "r_multiple_initial_risk", value: formData.r_multiple_initial_risk !== undefined && formData.r_multiple_initial_risk !== null ? String(formData.r_multiple_initial_risk) : '', onChange: onFormChange, className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full focus:outline-none focus:ring-2 focus:ring-primary", placeholder: "Enter initial risk in R-multiples", step: "0.1" })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Conviction Score (1-10)" }), _jsx("input", { type: "range", name: "conviction_score", min: 1, max: 10, value: formData.conviction_score ?? 5, onChange: onFormChange, className: "w-full" }), _jsx("span", { className: "text-sm text-on-surface", children: formData.conviction_score ?? 5 })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Thesis Validation" }), _jsxs("select", { name: "thesis_validation", value: formData.thesis_validation || '', onChange: onFormChange, className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full focus:outline-none focus:ring-2 focus:ring-primary", children: [_jsx("option", { value: "", children: "Select" }), _jsx("option", { value: "Correct", children: "Correct" }), _jsx("option", { value: "Partially Correct", children: "Partially Correct" }), _jsx("option", { value: "Incorrect", children: "Incorrect" })] })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Adherence to Plan" }), _jsxs("select", { name: "adherence_to_plan", value: formData.adherence_to_plan || '', onChange: onFormChange, className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full focus:outline-none focus:ring-2 focus:ring-primary", children: [_jsx("option", { value: "", children: "Select" }), _jsx("option", { value: "High", children: "High" }), _jsx("option", { value: "Medium", children: "Medium" }), _jsx("option", { value: "Low", children: "Low" })] })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Unforeseen Events (if any)" }), _jsx("textarea", { name: "unforeseen_events", value: formData.unforeseen_events || '', onChange: onFormChange, className: "p-2 border border-card-stroke rounded bg-surface-variant text-on-surface w-full min-h-[60px] focus:outline-none focus:ring-2 focus:ring-primary", placeholder: "Describe any unexpected events that affected the trade..." })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Overall Trade Rating (1-10)" }), _jsx("input", { type: "range", name: "overall_trade_rating", min: 1, max: 10, value: formData.overall_trade_rating ?? 5, onChange: onFormChange, className: "w-full" }), _jsx("span", { className: "text-sm text-on-surface", children: formData.overall_trade_rating ?? 5 })] }), _jsxs("div", { className: "flex flex-col gap-1 text-left", children: [_jsx("label", { className: "block mb-1 text-accent text-sm font-medium", children: "Emotions" }), _jsx("div", { className: "flex flex-wrap gap-2 mt-1", children: availableEmotions.map(emotion => {
                            const isSelected = (formData.emotion_ids || []).includes(emotion.emotion_id);
                            return (_jsx("button", { type: "button", onClick: () => onEmotionChange(emotion.emotion_id), className: `px-4 py-2 rounded border border-card-stroke transition-colors focus:outline-none focus:ring-2 focus:ring-primary font-medium text-sm ${isSelected ? 'bg-accent text-black' : 'bg-surface-variant text-on-surface hover:bg-accent/20'}`, children: emotion.emotion_name }, emotion.emotion_id));
                        }) })] })] }));
};
export default TradeMetadataForm;
